import * as vscode from 'vscode';
import { Agent, SwarmStatus, SwarmEvent, HiveConfig, SpecificationTask, AgentType, HiveOrchestrationResult } from '../types';
export declare class HiveOrchestrator implements vscode.Disposable {
    private context;
    private memoryBank;
    private agents;
    private activeAgents;
    private dormantAgents;
    private taskQueue;
    private eventEmitter;
    private outputChannel;
    private config;
    private isInitialized;
    private queenAgent?;
    readonly onHiveEvent: vscode.Event<SwarmEvent>;
    constructor(context: vscode.ExtensionContext, config?: HiveConfig);
    initializeHive(config?: HiveConfig): Promise<void>;
    orchestrateSpecification(spec: SpecificationTask): Promise<HiveOrchestrationResult>;
    spawnSpecializedAgent(type: AgentType, capabilities?: string[]): Promise<string>;
    getHiveStatus(): Promise<SwarmStatus>;
    queryMemoryBank(query: string, limit?: number): Promise<any[]>;
    getAgents(): Agent[];
    getActiveAgents(): Agent[];
    terminateAgent(agentId: string): Promise<void>;
    clearMemoryBank(): Promise<void>;
    private spawnQueenAgent;
    private initializeAgentPool;
    private analyzeSpecification;
    private assignAgentsToTasks;
    private executeWithCoordination;
    private executeParallel;
    private executeSequential;
    private executeTask;
    private simulateTaskExecution;
    private selectOptimalModel;
    private selectCognitivePattern;
    private getDefaultCapabilities;
    private calculateComplexity;
    private analyzeDependencies;
    private estimateResourceRequirements;
    private recommendTopology;
    private identifyRequiredAgentTypes;
    private findSuitableAgents;
    private selectOptimalAgent;
    private sortTasksByDependencies;
    private aggregateResults;
    private optimizeAgentPool;
    private dormantizeAgent;
    private calculateHivePerformance;
    private assessHiveHealth;
    private startHealthMonitoring;
    private emitEvent;
    dispose(): void;
}
//# sourceMappingURL=hiveOrchestrator.d.ts.map